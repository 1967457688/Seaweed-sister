package com.luolight.SeaweedS.mappers;

import com.luolight.SeaweedS.models.SsUser;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SsUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ss_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ss_user (id, usern, ",
        "passw, nick_name, ",
        "telphone, phone_number, ",
        "photo, company, ",
        "last_login_time, type, ",
        "token)",
        "values (#{id,jdbcType=INTEGER}, #{usern,jdbcType=VARCHAR}, ",
        "#{passw,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, ",
        "#{telphone,jdbcType=CHAR}, #{phoneNumber,jdbcType=CHAR}, ",
        "#{photo,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, ",
        "#{lastLoginTime,jdbcType=TIMESTAMP}, #{type,jdbcType=SMALLINT}, ",
        "#{token,jdbcType=VARCHAR})"
    })
    int insert(SsUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @InsertProvider(type=SsUserSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys = true, keyProperty = "id", keyColumn = "id")
    int insertSelective(SsUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, usern, passw, nick_name, telphone, phone_number, photo, company, last_login_time, ",
        "type, token",
        "from ss_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="usern", property="usern", jdbcType=JdbcType.VARCHAR),
        @Result(column="passw", property="passw", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="telphone", property="telphone", jdbcType=JdbcType.CHAR),
        @Result(column="phone_number", property="phoneNumber", jdbcType=JdbcType.CHAR),
        @Result(column="photo", property="photo", jdbcType=JdbcType.VARCHAR),
        @Result(column="company", property="company", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR)
    })
    SsUser selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "id, usern, passw, nick_name, telphone, phone_number, photo, company, last_login_time, ",
        "type, token",
        "from ss_user",
        "where token = #{token,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="usern", property="usern", jdbcType=JdbcType.VARCHAR),
        @Result(column="passw", property="passw", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="telphone", property="telphone", jdbcType=JdbcType.CHAR),
        @Result(column="phone_number", property="phoneNumber", jdbcType=JdbcType.CHAR),
        @Result(column="photo", property="photo", jdbcType=JdbcType.VARCHAR),
        @Result(column="company", property="company", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR)
    })
    SsUser SelectByToken(String token);
    
    @Select({
        "select",
        "id, usern, passw, nick_name, telphone, phone_number, photo, company, last_login_time, ",
        "type, token",
        "from ss_user",
        "where usern = #{username,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="usern", property="usern", jdbcType=JdbcType.VARCHAR),
        @Result(column="passw", property="passw", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="telphone", property="telphone", jdbcType=JdbcType.CHAR),
        @Result(column="phone_number", property="phoneNumber", jdbcType=JdbcType.CHAR),
        @Result(column="photo", property="photo", jdbcType=JdbcType.VARCHAR),
        @Result(column="company", property="company", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.SMALLINT),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR)
    })
    SsUser selectByUsername(String username);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SsUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SsUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_user
     *
     * @mbggenerated
     */
    @Update({
        "update ss_user",
        "set usern = #{usern,jdbcType=VARCHAR},",
          "passw = #{passw,jdbcType=VARCHAR},",
          "nick_name = #{nickName,jdbcType=VARCHAR},",
          "telphone = #{telphone,jdbcType=CHAR},",
          "phone_number = #{phoneNumber,jdbcType=CHAR},",
          "photo = #{photo,jdbcType=VARCHAR},",
          "company = #{company,jdbcType=VARCHAR},",
          "last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},",
          "type = #{type,jdbcType=SMALLINT},",
          "token = #{token,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SsUser record);
}