package com.luolight.SeaweedS.mappers;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.luolight.SeaweedS.models.SsStructureLevel;

public class SsStructureLevelSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_structure_level
     *
     * @mbggenerated
     */
    public String insertSelective(SsStructureLevel record) {
        BEGIN();
        INSERT_INTO("ss_structure_level");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getContent() != null) {
            VALUES("content", "#{content,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getIsDelete() != null) {
            VALUES("is_delete", "#{isDelete,jdbcType=SMALLINT}");
        }
        
        if (record.getDeleteTime() != null) {
            VALUES("delete_time", "#{deleteTime,jdbcType=TIMESTAMP}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_structure_level
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(SsStructureLevel record) {
        BEGIN();
        UPDATE("ss_structure_level");
        
        if (record.getContent() != null) {
            SET("content = #{content,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            SET("user_id = #{userId,jdbcType=INTEGER}");
        }
        
        if (record.getIsDelete() != null) {
            SET("is_delete = #{isDelete,jdbcType=SMALLINT}");
        }
        
        if (record.getDeleteTime() != null) {
            SET("delete_time = #{deleteTime,jdbcType=TIMESTAMP}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }
}