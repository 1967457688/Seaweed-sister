package com.luolight.SeaweedS.mappers;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.luolight.SeaweedS.models.SsModule;

public class SsModuleSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_module
     *
     * @mbggenerated
     */
    public String insertSelective(SsModule record) {
        BEGIN();
        INSERT_INTO("ss_module");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getTypeId() != null) {
            VALUES("type_id", "#{typeId,jdbcType=INTEGER}");
        }
        
        if (record.getName() != null) {
            VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getUrl() != null) {
            VALUES("url", "#{url,jdbcType=VARCHAR}");
        }
        
        if (record.getUrlHost() != null) {
            VALUES("url_host", "#{urlHost,jdbcType=VARCHAR}");
        }
        
        if (record.getIsNeed() != null) {
            VALUES("is_need", "#{isNeed,jdbcType=SMALLINT}");
        }
        
        if (record.getDescription() != null) {
            VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        
        if (record.getSimple() != null) {
            VALUES("simple", "#{simple,jdbcType=VARCHAR}");
        }
        
        if (record.getTime() != null) {
            VALUES("time", "#{time,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLevelId() != null) {
            VALUES("level_id", "#{levelId,jdbcType=SMALLINT}");
        }
        
        if (record.getIsDelete() != null) {
            VALUES("is_delete", "#{isDelete,jdbcType=SMALLINT}");
        }
        
        if (record.getDeleteTime() != null) {
            VALUES("delete_time", "#{deleteTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ss_module
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(SsModule record) {
        BEGIN();
        UPDATE("ss_module");
        
        if (record.getTypeId() != null) {
            SET("type_id = #{typeId,jdbcType=INTEGER}");
        }
        
        if (record.getName() != null) {
            SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getUrl() != null) {
            SET("url = #{url,jdbcType=VARCHAR}");
        }
        
        if (record.getUrlHost() != null) {
            SET("url_host = #{urlHost,jdbcType=VARCHAR}");
        }
        
        if (record.getIsNeed() != null) {
            SET("is_need = #{isNeed,jdbcType=SMALLINT}");
        }
        
        if (record.getDescription() != null) {
            SET("description = #{description,jdbcType=VARCHAR}");
        }
        
        if (record.getSimple() != null) {
            SET("simple = #{simple,jdbcType=VARCHAR}");
        }
        
        if (record.getTime() != null) {
            SET("time = #{time,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLevelId() != null) {
            SET("level_id = #{levelId,jdbcType=SMALLINT}");
        }
        
        if (record.getIsDelete() != null) {
            SET("is_delete = #{isDelete,jdbcType=SMALLINT}");
        }
        
        if (record.getDeleteTime() != null) {
            SET("delete_time = #{deleteTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUserId() != null) {
            SET("user_id = #{userId,jdbcType=INTEGER}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }
}